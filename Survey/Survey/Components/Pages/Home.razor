@page "/"
@using Radzen
@using Survey.Repositories
@using Radzen.Blazor
@using Survey.Models

@inject ISurveyRepository DbRepository

@if (surveys is null)
{
    <div class="row my-1">
        <div class="col-sm-5 col-lg">
            <RadzenCard>
                <RadzenText Text="Admin Page Loading....." TextStyle="TextStyle.H6"/>
            </RadzenCard>
        </div>
    </div>

    <div class="row my-3">
        <RadzenCard>

            <div class="col-sm-12 col-lg-2">
                    <RadzenStack>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: white; background: black; text-align: center">Title</RadzenText>
                    </RadzenStack>
            </div>
        </RadzenCard>
    </div>
}

else
{
    <div class="row my-3 col-lg">
            <RadzenCard>
                <RadzenText Text="Admin Page" TextStyle="TextStyle.H6"/>
            </RadzenCard>
    </div>
    
    <div class="row my-3">
            <RadzenDataGrid @ref="surveyGrid" AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" AllowPaging="true" PageSize="5" AllowSorting="true"
                            Data="@surveys" TItem="SurveyForm">
                <Columns>
                    <RadzenDataGridColumn Property="@nameof(SurveyForm.Title)" Title="Order Date" />
                    <RadzenDataGridColumn Property="@nameof(SurveyForm.Questions)" Title="ShipCountry" />
                    <RadzenDataGridColumn Property="@nameof(SurveyForm.CreateTime)" Title="ShipCountry" />
                    <RadzenDataGridColumn Property="@nameof(SurveyForm.CreateTime)" Title="ShipCountry" />
                </Columns>
            </RadzenDataGrid>
    </div>


}

@code
{
    private string statusMessage;

    RadzenDataGrid<SurveyForm> surveyGrid;
    private SurveyForm[]? surveys;
    protected override async Task OnInitializedAsync()
    {
        surveys = (SurveyForm[]?)await DbRepository.GetForms();

        // try
        // {
        //     SurveyForm newForm = new SurveyForm
        //     {
        //         Title = "Survey DB Test"
        //     };
        //
        //     Dictionary<string, string> newQuestion = new Dictionary<string, string>
        //     {
        //         { "질문 1", "여름 음식중 제일 좋아하는 것은?" },
        //         { "질문 2", "여름 레저 스포츠를 한다면 원하는 것은?" }
        //     };
        //
        //     newForm.Questions = JsonConvert.SerializeObject(newQuestion);
        //     newForm.Constructor = "salin";
        //     newForm.CreateTime = DateTime.Now;
        //
        //     DbRepository.CreateForm(newForm);
        //
        //     statusMessage = "Form created successfully!";
        // }
        // catch (Exception ex)
        // {
        //     statusMessage = $"Error: {ex.Message}";
        // }
        // Console.WriteLine($"{statusMessage}");
    }
}
