@page "/form/questioninfo/{key}"
@using Newtonsoft.Json
@using Survey.Models
@using Survey.Repositories

@inject ISurveyRepository DbRepository

@rendermode InteractiveServer

@if (survey is null)
{
    <div class="rz-p-12">
        <RadzenText TextStyle="TextStyle.H1">Loading.....</RadzenText>
    </div>
}

else
{
    <div class="rz-p-12">
        <RadzenText TextStyle="TextStyle.H3">@title</RadzenText>
    </div>
    
    <RadzenTabs @bind-SelectedIndex=@selectedIndex>
        <Tabs>
            <RadzenTabsItem Text="Questions">
                <div class="row my-1">
                    <div class="col-sm-12 col-lg-12">
                        @{
                            questionIndex = 0;
                        }
                        @foreach (string question in questionList)
                        {
                            <RadzenCard Style="margin-top: 2rem;">
                                <RadzenText Text=@($"Question {++questionIndex}") TextStyle="TextStyle.H6"/>
                                <RadzenText Text=@(question) TextStyle="TextStyle.H6"/>
                            </RadzenCard>
                        }
                    </div>
                </div>
                </RadzenTabsItem>
            <RadzenTabsItem Text="Answers">
                <div class="row my-3">
                    @{
                        columIndex = 0;
                    }
                    <RadzenDataGrid @ref="answerGrid" FilterPopupRenderMode="PopupRenderMode.OnDemand" AllowPaging="true" PageSize="5"
                                    Data="@answers" TItem="SurveyAnswer">
                        <Columns>
                            <RadzenDataGridColumn TItem="SurveyAnswer" Title="No.">
                                <Template Context="survey">
                                    @{
                                        columIndex++;
                                    }
                                    @columIndex
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn Property="@nameof(SurveyAnswer.Title)" Title="Title"/>
                            <RadzenDataGridColumn Property="@nameof(SurveyAnswer.Answers)" Title="Answers"/>
                            <RadzenDataGridColumn Property="@nameof(SurveyAnswer.CreateTime)" Title="CreateAt"/>
                            <RadzenDataGridColumn Property="@nameof(SurveyAnswer.UserId)" Title="Manager"/>
                        </Columns>
                    </RadzenDataGrid>
                </div>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Total">
                Order Details
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>



}


@code {
    [Parameter]
    public string? key { get; set; }

    [SupplyParameterFromForm] private SurveyForm? survey { get; set; }
    [SupplyParameterFromForm] private IEnumerable<SurveyAnswer> answers { get; set; }
    
    RadzenDataGrid<SurveyAnswer> answerGrid;
    private int columIndex = 0;
    private int surveysCount;

    private string[] questionList;
    TabPosition tabPosition = TabPosition.Top;

    private string title = string.Empty;
    private int questionIndex = 0;
    private int selectedIndex = 0;

    protected override void OnInitialized()
    {
        selectedIndex = 0;
    }


    protected override async Task OnParametersSetAsync()
    {
        if (key is null)
            return;
        
        survey = await DbRepository.GetForm(key);

        questionList = JsonConvert.DeserializeObject<string[]>(survey.Questions);
        title = survey.Title;

        answers = await DbRepository.GetAnswers(key);
    }
    
    void OnChange(int index)
    {
        Console.WriteLine($"Tab with index {index} was selected.");
    }
    private void OnTabChange(int index)
    {
        selectedIndex = index;
    }
}